{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","i","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","length","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UACb,qBAAuB,iBAE7B,OACI,wBAAIC,UAAW,QACVJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,KCgBjC,EAtBA,WACX,IAAMK,EAAUC,IAAMC,IAHV,cAINC,EAAc,CAChBC,GAAI,IACJN,QAAS,mCACTO,KAAM,2BACNT,WAAW,GAEf,OAAOI,EAAQM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAON,OAc1C,EAVA,SAAAO,GAEX,OADgBT,IAAMU,KAfV,aAewBD,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACJ,EAAIM,GAEhB,OADgBT,IAAMW,IAAN,UApBJ,aAoBI,YAAwBR,GAAMM,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCN9BK,EAZM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OAAgB,OAAZA,EACO,KAIP,yBAAKjB,UAAW,SACXiB,ICUEC,EAlBD,WAOV,OACI,yBAAKC,MAPW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKN,6BACA,uGCkFGC,EAxFH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACPC,EADO,KACAC,EADA,OAEgBF,mBAAS,IAFzB,mBAEPG,EAFO,KAEEC,EAFF,OAGgBJ,oBAAS,GAHzB,mBAGPK,EAHO,KAGEC,EAHF,OAI0BN,mBAAS,0BAJnC,mBAIPO,EAJO,KAIOC,EAJP,KAMdC,qBAAU,WACNC,IAEKzB,MAAK,SAAA0B,GACFT,EAASS,QAElB,IAEH,IAwCMC,EAAcP,EACdJ,EACAA,EAAMY,QAAO,SAAAzC,GAAI,OAAIA,EAAKG,aAEhC,OACI,6BACI,qCACA,kBAAC,EAAD,CAAckB,QAASc,IACvB,6BACI,4BAAQ7B,QAAS,kBAAM4B,GAAYD,KAAnC,QACUA,EAAU,YAAc,QAGtC,4BACKO,EAAYE,KAAI,SAAC1C,EAAM2C,GAAP,OACb,kBAAC,EAAD,CACIC,IAAKD,EACL3C,KAAMA,EACNC,iBAAkB,kBAzCX,SAACU,GACf,sCAAkCA,GAA3C,IACMX,EAAO6B,EAAMgB,MAAK,SAAAC,GAAC,OAAIA,EAAEnC,KAAOA,KAChCoC,EAAW,2BAAQ/C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDmC,EACY3B,EAAIoC,GACXlC,MAAK,SAAAmC,GACFlB,EAASD,EAAMa,KAAI,SAAA1C,GAAI,OAAIA,EAAKW,KAAOA,EAAKX,EAAOgD,SAEtDC,OAAM,SAAAC,GACHd,EAAgB,SAAD,OAAUpC,EAAKK,QAAf,sCACf8C,YAAW,WACPf,EAAgB,QACjB,KACHN,EAASD,EAAMY,QAAO,SAAAK,GAAC,OAAIA,EAAEnC,KAAOA,SA0BJyC,CAAmBpD,EAAKW,WAI5D,0BAAM0C,SA9DE,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAa,CACfnD,QAAS0B,EACTnB,MAAM,IAAI6C,MAAOC,cACjBvD,UAAWwD,KAAKC,SAAW,GAC3BjD,GAAIkB,EAAMgC,OAAS,GAGvBvB,EACYkB,GACP3C,MAAK,SAAAmC,GACFlB,EAASD,EAAMb,OAAOgC,IACtBhB,EAAW,SAkDX,2BACI8B,MAAO/B,EACPgC,SA7BS,SAACT,GACtBtB,EAAWsB,EAAMU,OAAOF,UA8BhB,4BAAQG,KAAK,UAAb,SAEJ,kBAAC,EAAD,Q,MCrFZC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.f8785e65.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n    const label = note.important\r\n        ? 'make not important' : 'make important'\r\n\r\n    return (\r\n        <li className={'note'}>\r\n            {note.content}\r\n            <button onClick={toggleImportance}>{label}</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Note\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    const nonExisting = {\r\n        id: 10000,\r\n        content: 'This note is not saved to server',\r\n        date: '2019-05-30T17:30:31.098Z',\r\n        important: true,\r\n    }\r\n    return request.then(response => response.data.concat(nonExisting))\r\n    //return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }\r\n","import React from \"react\";\r\n\r\n\r\n\r\nconst Notification = ({message}) => {\r\n    if (message === null){\r\n        return null\r\n    }\r\n\r\n    return(\r\n        <div className={'error'}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React from \"react\";\r\n\r\n\r\nconst Footer =() => {\r\n    const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n    }\r\n\r\n    return (\r\n        <div style={footerStyle}>\r\n            <br />\r\n            <em>\r\n                Note app, Department of Computer Science, University of Helsinki 2020\r\n            </em>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Footer\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\nimport Notification from './components/Notification'\r\nimport Footer from \"./components/Footer\";\r\n\r\nconst App = () => {\r\n    const [notes, setNotes] = useState([])\r\n    const [newNote, setNewNote] = useState('')\r\n    const [showAll, setShowAll] = useState(true)\r\n    const [errorMessage, setErrorMessage] = useState('some error happened...')\r\n\r\n    useEffect(() => {\r\n        noteService\r\n            .getAll()\r\n            .then(initialNotes => {\r\n                setNotes(initialNotes)\r\n            })\r\n    }, [])\r\n\r\n    const addNote = (event) => {\r\n        event.preventDefault()\r\n        const noteObject = {\r\n            content: newNote,\r\n            date: new Date().toISOString(),\r\n            important: Math.random() > 0.5,\r\n            id: notes.length + 1,\r\n        }\r\n\r\n        noteService\r\n            .create(noteObject)\r\n            .then(returnedNote => {\r\n                setNotes(notes.concat(returnedNote))\r\n                setNewNote('')\r\n            })\r\n    }\r\n\r\n    const toggleImportanceOf = (id) => {\r\n        const url = `http://localhost:3001/notes/${id}`\r\n        const note = notes.find(n => n.id === id)\r\n        const changedNote = { ...note, important: !note.important }\r\n\r\n        noteService\r\n            .update(id, changedNote)\r\n            .then(returnedNote => {\r\n                setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n            })\r\n            .catch(error => {\r\n                setErrorMessage(`Note '${note.content}' was already removed from server`)\r\n                setTimeout(() => {\r\n                    setErrorMessage(null)\r\n                }, 5000)\r\n                setNotes(notes.filter(n => n.id !== id))\r\n            })\r\n    }\r\n\r\n    const handleNoteChange = (event) => {\r\n        setNewNote(event.target.value)\r\n    }\r\n\r\n    const notesToShow = showAll\r\n        ? notes\r\n        : notes.filter(note => note.important)\r\n\r\n    return (\r\n        <div>\r\n            <h1>Notes</h1>\r\n            <Notification message={errorMessage}/>\r\n            <div>\r\n                <button onClick={() => setShowAll(!showAll)}>\r\n                    show {showAll ? 'important' : 'all' }\r\n                </button>\r\n            </div>\r\n            <ul>\r\n                {notesToShow.map((note, i) =>\r\n                    <Note\r\n                        key={i}\r\n                        note={note}\r\n                        toggleImportance={() => toggleImportanceOf(note.id)}\r\n                    />\r\n                )}\r\n            </ul>\r\n            <form onSubmit={addNote}>\r\n                <input\r\n                    value={newNote}\r\n                    onChange={handleNoteChange}\r\n                />\r\n                <button type=\"submit\">save</button>\r\n            </form>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}